version: '3.8'

services:
  app:
    build:
      context: ./bot
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENV_VAR=example
    volumes:
      - .:/app
  db:
    image: postgres:latest  # or whatever database you're using
    volumes:
      - db_data:/var/lib/postgresql/data  # This is where Postgres stores its data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - discord_network

  nginx:
    build: nginx\Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - discord_network
    depends_on:
      - api_1
  
  api_1:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - .:/app
    networks:
      - discord_network

  api_2:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - .:/app
    networks:
      - discord_network

volumes:
  db_data:
    external: true

networks:
  discord_network:
    driver: bridge
